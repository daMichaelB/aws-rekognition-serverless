service: aws-rekognition-serverless

plugins:
  - serverless-python-requirements
package:
  exclude:
     - venv/**
     - node_modules/**
     - .idea/**
     - .serverless/**

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'dev'}
  region: eu-central-1
  versionFunctions: False

  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}-table
    QUEUE_NAME: ${self:service}-${opt:stage, self:provider.stage}-queue
    INPUT_BUCKET: ${env:INPUT_BUCKET}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "rekognition:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  aws-rekognition-lambda:
    handler: handler.lambda_handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - RekognitionInputQueue
              - Arn

resources:
  Resources:
    RekognitionInputQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:provider.environment.QUEUE_NAME}

    RekognitionResultsTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: img_url
            AttributeType: S
          - AttributeName: max_similarity
            AttributeType: N
        KeySchema:
          - AttributeName: img_url
            KeyType: HASH
          - AttributeName: max_similarity
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}